# name: Deploy to EC2

# on:
#   push:
#     branches:
#       - main # main 브랜치에 push할 때 실행

# jobs:
#   build-and-push:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       - name: Build Docker Image
#         run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .

#       - name: Push Docker Image to Docker Hub
#         run: docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

#   deploy:
#     name: Deploy to EC2
#     runs-on: ubuntu-latest
#     needs: build-and-push

#     steps:
#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#           script: |
#             docker stop my-app || true
#             docker rm my-app || true
#             docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
#             docker run -d --name my-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-app:latest

name: Test EC2 SSH

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-ssh:
    name: Connect to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Connect to EC2 via SS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Successfully connected to EC2!"
            docker -v
            # docker-compose -v
